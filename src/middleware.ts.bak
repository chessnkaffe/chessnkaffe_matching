// src/middleware.ts
import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const path = request.nextUrl.pathname

  // Define paths that are considered public
  const isPublicPath = ['/login', '/signup'].includes(path)

  // Get the token from cookies only
  const token = request.cookies.get('userToken')?.value

  // If trying to access a public path while logged in, redirect to profile
  if (isPublicPath && token) {
    return NextResponse.redirect(new URL('/profile', request.url))
  }

  // If trying to access a protected path without a token, redirect to login
  if (!isPublicPath && !token) {
    return NextResponse.redirect(new URL('/login', request.url))
  }
}

export const config = {
  matcher: [
    '/',
    '/login',
    '/signup',
    '/profile',
    '/chess-match',
    '/matches'
  ]
}